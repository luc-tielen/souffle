<map id="souffle::EqrelIndex" name="souffle::EqrelIndex">
<area shape="rect" id="node2" href="$classsouffle_1_1_generic_index.html" title="{souffle::GenericIndex\l\&lt; EquivalenceRelation\l\&lt; t_tuple\&lt; 2 \&gt; \&gt; \&gt;\n||+ clear()\l+ contains()\l+ contains()\l+ createView()\l+ empty()\l+ GenericIndex()\l+ getArity()\l+ insert()\l+ insert()\l+ partitionRange()\l+ partitionScan()\l+ range()\l+ scan()\l+ size()\l# bounds()\l}" alt="" coords="773,3859,943,4171"/>
<area shape="rect" id="node3" href="$classsouffle_1_1_interpreter_index.html" title="An index is an abstraction of a data structure. " alt="" coords="513,3513,691,3796"/>
<area shape="rect" id="node4" href="$classstatic_01constexpr_01int.html" title="{static constexpr int\n||}" alt="" coords="715,3616,862,3693"/>
<area shape="rect" id="node5" href="$classsouffle_1_1_equivalence_relation.html" title="{souffle::EquivalenceRelation\l\&lt; t_tuple\&lt; 2 \&gt; \&gt;\n||+ anteriorIt()\l+ antpostit()\l+ begin()\l+ clear()\l+ closure()\l+ contains()\l+ contains()\l+ empty()\l+ emptyPartition()\l+ end()\land 14 more...\l# containsElement()\l&#45; genAllDisjointSetLists()\l}" alt="" coords="887,3521,1093,3789"/>
<area shape="rect" id="node7" href="$classsouffle_1_1_lambda_b_tree_set.html" title="{souffle::LambdaBTreeSet\l\&lt; StorePair, std::function\l\&lt; StatesBucket(StorePair\l &amp;)\&gt;, souffle::EqrelMapComparator\l\&lt; StorePair \&gt; \&gt;\n||+ LambdaBTreeSet()\l+ LambdaBTreeSet()\l+ LambdaBTreeSet()\l+ LambdaBTreeSet()\l+ operator=()\l+ load()\l&#45; LambdaBTreeSet()\l}" alt="" coords="905,2905,1155,3129"/>
<area shape="rect" id="node8" href="$classsouffle_1_1detail_1_1_lambda_b_tree.html" title="{souffle::detail::LambdaBTree\l\&lt; StorePair, souffle::EqrelMapComparator\l\&lt; StorePair \&gt;, std::allocator\&lt; StorePair\l \&gt;, 256, typename detail::default_strategy\l\&lt; StorePair \&gt;::type, true, std::function\l\&lt; StatesBucket(StorePair &amp;)\&gt; \&gt;\n||+ insert()\l+ insert()\l+ insert()\l+ insertAll()\l+ LambdaBTree()\l+ operator!=()\l+ operator=()\l+ operator==()\l+ swap()\l}" alt="" coords="913,2380,1211,2648"/>
<area shape="rect" id="node9" href="$classsouffle_1_1detail_1_1btree.html" title="{souffle::detail::btree\l\&lt; StorePair, souffle::\lEqrelMapComparator\&lt; StorePair\l \&gt;, std::allocator\&lt; StorePair\l \&gt;, blockSize, typename detail\l::default_strategy\&lt; StorePair \&gt;\l::type, isSet, souffle::EqrelMapComparator\l\&lt; StorePair \&gt;, detail::updater\&lt; StorePair \&gt; \&gt;\n||+ begin()\l+ btree()\l+ btree()\l+ btree()\l+ btree()\l+ check()\l+ clear()\l+ contains()\l+ contains()\l+ empty()\land 25 more...\l+ load()\l# btree()\l# covers()\l# equal()\l# less()\l# update()\l# weak_covers()\l# weak_equal()\l# weak_less()\l&#45; coversUpperBound()\l&#45; buildSubTree()\l}" alt="" coords="905,1537,1221,2025"/>
<area shape="rect" id="node10" href="$structsouffle_1_1detail_1_1btree_1_1hint__statistics.html" title="{souffle::detail::btree\l\&lt; Key, Comparator, Allocator,\l blockSize, SearchStrategy,\l isSet, WeakComparator, Updater\l \&gt;::hint_statistics\n||}" alt="" coords="2043,1287,2281,1423"/>
<area shape="rect" id="node29" href="$classsouffle_1_1detail_1_1btree.html" title="{souffle::detail::btree\l\&lt; PairStore, EqrelMapComparator\l\&lt; PairStore \&gt;, std::allocator\l\&lt; PairStore \&gt;, blockSize, typename\l detail::default_strategy\&lt; PairStore\l \&gt;::type, isSet, EqrelMapComparator\l\&lt; PairStore \&gt;, detail::updater\&lt; PairStore \&gt; \&gt;\n||+ begin()\l+ btree()\l+ btree()\l+ btree()\l+ btree()\l+ check()\l+ clear()\l+ contains()\l+ contains()\l+ empty()\land 25 more...\l+ load()\l# btree()\l# covers()\l# equal()\l# less()\l# update()\l# weak_covers()\l# weak_equal()\l# weak_less()\l&#45; coversUpperBound()\l&#45; buildSubTree()\l}" alt="" coords="1555,1545,1871,2018"/>
<area shape="rect" id="node11" href="$classsouffle_1_1_cache_access_counter.html" title="A utility class to keep track of cache hits/misses. " alt="" coords="2030,667,2241,847"/>
<area shape="rect" id="node16" href="$structsouffle_1_1detail_1_1btree_1_1base.html" title="The base type of all node types containing essential book&#45;keeping information. " alt="" coords="1229,285,1522,479"/>
<area shape="rect" id="node14" href="$structsouffle_1_1detail_1_1btree_1_1leaf__node.html" title="The data type representing leaf nodes of the b&#45;tree. " alt="" coords="1300,1287,1539,1423"/>
<area shape="rect" id="node15" href="$structsouffle_1_1detail_1_1btree_1_1node.html" title="The actual, generic node implementation covering the operations for both, inner and leaf nodes..." alt="" coords="1272,608,1567,905"/>
<area shape="rect" id="node34" href="$classsouffle_1_1_random_insert_piggy_list.html" title="{souffle::RandomInsertPiggy\lList\&lt; value_type \&gt;\n||+ clear()\l+ freeList()\l+ get()\l+ getBlock()\l+ insertAt()\l+ operator=()\l+ operator=()\l+ RandomInsertPiggyList()\l+ RandomInsertPiggyList()\l+ RandomInsertPiggyList()\l+ RandomInsertPiggyList()\l+ size()\l+ ~RandomInsertPiggyList()\l}" alt="" coords="233,248,441,516"/>
<area shape="rect" id="node39" href="$classsouffle_1_1_piggy_list.html" title="{souffle::PiggyList\l\&lt; std::atomic\&lt; block_t \&gt; \&gt;\n||+ append()\l+ begin()\l+ clear()\l+ createNode()\l+ end()\l+ freeList()\l+ get()\l+ getBlock()\l+ operator=()\l+ PiggyList()\l+ PiggyList()\l+ PiggyList()\l+ PiggyList()\l+ size()\l+ ~PiggyList()\l}" alt="" coords="630,233,833,531"/>
<area shape="rect" id="node20" href="$structsouffle_1_1detail_1_1updater.html" title="{souffle::detail::updater\l\&lt; StorePair \&gt;\n||+ update()\l}" alt="" coords="572,1309,741,1401"/>
<area shape="rect" id="node21" href="$classsouffle_1_1_eqrel_map_comparator_3_01_store_pair_01_4.html" title="{EqrelMapComparator\l\&lt; StorePair \&gt;\n||}" alt="" coords="765,1309,924,1401"/>
<area shape="rect" id="node22" href="$classsouffle_1_1_optimistic_read_write_lock.html" title="A &#39;sequential&#39; non&#45;locking implementation for an optimistic r/w lock. " alt="" coords="1038,1251,1275,1460"/>
<area shape="rect" id="node23" href="$structsouffle_1_1detail_1_1default__strategy.html" title="{souffle::detail::default\l_strategy\&lt; StorePair \&gt;\n||}" alt="" coords="1653,1309,1823,1401"/>
<area shape="rect" id="node24" href="$structsouffle_1_1detail_1_1binary.html" title="{souffle::detail::binary\n||}" alt="" coords="1674,718,1834,795"/>
<area shape="rect" id="node30" href="$structsouffle_1_1detail_1_1default__strategy.html" title="{souffle::detail::default\l_strategy\&lt; PairStore \&gt;\n||}" alt="" coords="1847,1309,2018,1401"/>
<area shape="rect" id="node25" href="$structsouffle_1_1detail_1_1strategy__selection.html" title="{souffle::detail::strategy\l_selection\&lt; binary_search \&gt;\n||}" alt="" coords="1649,336,1859,428"/>
<area shape="rect" id="node26" href="$classsouffle_1_1_sparse_disjoint_set.html" title="{souffle::SparseDisjointSet\l\&lt; value_type \&gt;\n||+ clear()\l+ contains()\l+ findNode()\l+ makeNode()\l+ nodeExists()\l+ operator=()\l+ operator=()\l+ sameSet()\l+ size()\l+ SparseDisjointSet()\l+ SparseDisjointSet()\l+ SparseDisjointSet()\l+ toDense()\l+ toSparse()\l+ unionNodes()\l}" alt="" coords="439,3153,629,3451"/>
<area shape="rect" id="node27" href="$classsouffle_1_1_lambda_b_tree_set.html" title="{souffle::LambdaBTreeSet\l\&lt; PairStore, std::function\l\&lt; parent_t(PairStore &amp;)\&gt;,\l EqrelMapComparator\&lt; PairStore \&gt; \&gt;\n||+ LambdaBTreeSet()\l+ LambdaBTreeSet()\l+ LambdaBTreeSet()\l+ LambdaBTreeSet()\l+ operator=()\l+ load()\l&#45; LambdaBTreeSet()\l}" alt="" coords="1131,2672,1398,2881"/>
<area shape="rect" id="node28" href="$classsouffle_1_1detail_1_1_lambda_b_tree.html" title="{souffle::detail::LambdaBTree\l\&lt; PairStore, EqrelMapComparator\l\&lt; PairStore \&gt;, std::allocator\l\&lt; PairStore \&gt;, 256, typename detail\l::default_strategy\&lt; PairStore \&gt;::type,\l true, std::function\&lt; parent_t(PairStore &amp;)\&gt; \&gt;\n||+ insert()\l+ insert()\l+ insert()\l+ insertAll()\l+ LambdaBTree()\l+ operator!=()\l+ operator=()\l+ operator==()\l+ swap()\l}" alt="" coords="1264,2088,1583,2356"/>
<area shape="rect" id="node31" href="$structsouffle_1_1_eqrel_map_comparator.html" title="{souffle::EqrelMapComparator\l\&lt; PairStore \&gt;\n||+ equal()\l+ less()\l+ operator()()\l}" alt="" coords="2306,1295,2517,1416"/>
<area shape="rect" id="node32" href="$structsouffle_1_1detail_1_1updater.html" title="{souffle::detail::updater\l\&lt; PairStore \&gt;\n||+ update()\l}" alt="" coords="2541,1309,2711,1401"/>
<area shape="rect" id="node35" href="$classstd_1_1array_3_01std_1_1atomic_3_01value__type_01_5_01_4_00_01max_containers_01_4.html" title="{array\&lt; std::atomic\l\&lt; value_type * \&gt;, maxContainers \&gt;\n||}" alt="" coords="5,20,263,112"/>
<area shape="rect" id="node37" href="$classsouffle_1_1_spin_lock.html" title="A &#39;sequential&#39; non&#45;locking implementation for a spin lock. " alt="" coords="367,5,499,127"/>
<area shape="rect" id="node38" href="$classsouffle_1_1_disjoint_set.html" title="Structure that emulates a Disjoint Set, i.e. " alt="" coords="501,929,647,1227"/>
<area shape="rect" id="node42" href="$classsouffle_1_1_order.html" title="An order to be enforced for storing tuples within indexes. " alt="" coords="1163,3550,1287,3759"/>
</map>
